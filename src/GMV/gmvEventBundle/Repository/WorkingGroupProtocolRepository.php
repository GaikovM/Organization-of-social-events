<?php

namespace GMV\gmvEventBundle\Repository;


use Doctrine\ORM\EntityRepository;


/**
 * WorkingGroupProtocolRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class WorkingGroupProtocolRepository extends EntityRepository
{

    public function GetEventTask($idEvent)
    {
        return $this->createQueryBuilder('t')
            ->innerJoin('t.event','e','WITH','e.id = :idEvent')
            ->setParameter('idEvent',$idEvent)
            ->getQuery()
            ->execute();
    }

    public function GetEventTaskQ($idEvent)
    {
        return $this->createQueryBuilder('t')
            ->innerJoin('t.event','e','WITH','e.id = :idEvent')
            ->setParameter('idEvent',$idEvent)
            ->orderBy('t.date_finish')
            ->getQuery();

    }

    public function GetEventTaskUser($idUser)
    {
        return $this->createQueryBuilder('t')
            ->innerJoin('t.user','u','WITH','u.id = :idUser')
            ->setParameter('idUser',$idUser)
            ->getQuery()
            ->execute();
    }

    public function GetEventTaskUserQ($idUser)
    {
        return $this->createQueryBuilder('t')
            ->innerJoin('t.user','u','WITH','u.id = :idUser')
            ->setParameter('idUser',$idUser)
            ->getQuery();
    }


    public function GetAllTaskUser($idUser)
    {
        return $this->createQueryBuilder('t')
            ->innerJoin('t.creatorUser','u','WITH','u.id = :idUser')
            ->setParameter('idUser',$idUser)
            ->getQuery()
            ->execute();
    }

    public function GetAllTaskUserQ($idUser)
    {
        return $this->createQueryBuilder('t')
            ->innerJoin('t.creatorUser','u','WITH','u.id = :idUser')
            ->setParameter('idUser',$idUser)
            ->getQuery();
    }

}
